name: CI workflows
on:
  push:
    branches:
      - main
      - feature/deploy-aws
jobs:
  scanner-code-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      # - name: Setup Python
      #   uses: actions/setup-python@v2
      #   with:
      #     python-version: ${{ matrix.python }}
      # - name: Install tox and any other packages
      #   run: pip install tox
      # - name: Run tox
      #   run: tox -e py
      # - name: SonarCloud Scan
      #   uses: sonarsource/sonarcloud-github-action@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      # - name: SonarQube Quality Gate check
      #   id: sonarqube-quality-gate-check
      #   uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  build-image:
    # if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      # - name: Login docker hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      # - name: Build and Push Docker Image
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     push: true
      #     tags: kevingerardo23/bank-api:${{ vars.MAJOR }}.${{ vars.MINOR }}-${{ github.run_number }}
  deploy:
    needs: [build-image,scanner-code-analysis]
    runs-on: ubuntu-latest
    steps:       
      - name: Connect to EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.EC2_IP_PUBLIC }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # run commands on the remote server
            echo "Stop all containers"
            docker kill $(docker ps -q)
            echo "Remove all containers"
            docker rm $(docker ps -a -q)
            echo "Remove all images"
            docker rmi $(docker images -q)
            echo "Pull last image"
            sudo docker pull kevingerardo23/bank-api:1.3-52
            echo "Run image"
            sudo docker run --name bank-api -p 9000:9000 kevingerardo23/bank-api:1.3-52